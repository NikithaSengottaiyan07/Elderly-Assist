{"version":3,"names":["_voice","_interopRequireDefault","require","_reactNative","obj","__esModule","default","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","ReactNativeVoiceSTTProvider","constructor","locale","initialize","timeout","Platform","OS","onSpeechResults","event","_this$speechEndHandle","_this$speechResultsHa","Voice","cancel","stop","destroy","speechEndHandlers","forEach","handle","speechResultsHandlers","setTimeout","clearTimeout","_this$speechResultsHa2","onSpeechError","_this$speechErrorHand","speechErrorHandlers","_event$error","error","message","onSpeechPartialResults","_this$speechPartialHa","speechPartialHandlers","onSpeechStart","_this$speechStartHand","speechStartHandlers","onSpeechRecognized","_this$speechRecognize","speechRecognizedHandlers","isFinal","onSpeechEnd","_this$speechEndHandle2","onSpeechVolumeChanged","_this$speechVolumeHan","speechVolumeHandlers","startListening","start","stopListening","cancelListening","destroyInstance","removeAllListeners","isVoiceAvailable","isAvailable","isRecognizing","getSpeechRecognitionServices","services","addFinishListener","callback","_this$speechResultsHa3","push","addErrorListener","_this$speechErrorHand2","addPartialListener","_this$speechPartialHa2","addStartListener","_this$speechStartHand2","addRecognizedListener","_this$speechRecognize2","addEndListener","_this$speechEndHandle3","addVolumeListener","_this$speechVolumeHan2","clearHandlers","exports"],"sources":["ReactNativeVoiceSTTProvider.ts"],"sourcesContent":["import Voice, { SpeechEndEvent, SpeechErrorEvent, SpeechRecognizedEvent, SpeechResultsEvent, SpeechStartEvent, SpeechVolumeChangeEvent } from '@react-native-voice/voice';\r\nimport type VoicifySpeechToTextProvider from './VoicifySpeechToTextProvider';\r\nimport { Platform } from 'react-native';\r\n\r\nexport class ReactNativeVoiceSTTProvider implements VoicifySpeechToTextProvider {\r\n    locale: string\r\n    speechResultsHandlers: ((fullResult: string) => void)[] = []\r\n    speechErrorHandlers: ((error: string) => void)[] = []\r\n    speechPartialHandlers: ((partialResult: string) => void)[] = []\r\n    speechStartHandlers: ((error?: boolean) => void)[] = []\r\n    speechRecognizedHandlers: ((isFinal: boolean) => void)[] = []\r\n    speechEndHandlers: ((error?: boolean) => void)[] = []\r\n    speechVolumeHandlers: ((value: number) => void)[] = []\r\n\r\n    constructor(locale: string) {\r\n        this.locale = locale;\r\n    }\r\n\r\n    initialize(locale: string) {\r\n        this.locale = locale;\r\n        let timeout: any\r\n        //The react native voice package has a bug on ios where it does not wait \r\n        //for the person to stop talking before firing the callback function\r\n        //this work around sets a timer and fires the handlers if no new words are deteced after 500 ms\r\n        if (Platform.OS == \"ios\") {\r\n            const onSpeechResults = (event: SpeechResultsEvent) => {\r\n                Voice.cancel()\r\n                Voice.stop()\r\n                Voice.destroy()\r\n                this.speechEndHandlers?.forEach(handle => handle(false));\r\n                this.speechResultsHandlers?.forEach(handle => event.value && handle(event.value[0]));\r\n            }\r\n            Voice.onSpeechResults = (event: SpeechResultsEvent) => {\r\n                if(!timeout)\r\n                {\r\n                    timeout = setTimeout(() => {\r\n                        onSpeechResults(event)\r\n                    }, 900)\r\n                }\r\n                else\r\n                {\r\n                    clearTimeout(timeout)\r\n                    timeout = setTimeout(() => {\r\n                        onSpeechResults(event)\r\n                    }, 900)\r\n                }\r\n            }\r\n        }\r\n        else if (Platform.OS == \"android\") {\r\n            Voice.onSpeechResults = (event: SpeechResultsEvent) => {\r\n                this.speechResultsHandlers?.forEach(handle => event.value && handle(event.value[0]))\r\n            }\r\n        }\r\n\r\n\r\n        Voice.onSpeechError = (event: SpeechErrorEvent) => {\r\n            this.speechErrorHandlers?.forEach(handle => event.error?.message && handle(event.error.message))\r\n        }\r\n        Voice.onSpeechPartialResults = (event: SpeechResultsEvent) => {\r\n            this.speechPartialHandlers?.forEach(handle => event.value && handle(event.value[0]))\r\n        }\r\n        Voice.onSpeechStart = (event?: SpeechStartEvent) => {\r\n            this.speechStartHandlers?.forEach(handle => handle(event?.error));\r\n        }\r\n        Voice.onSpeechRecognized = (event: SpeechRecognizedEvent) => {\r\n            this.speechRecognizedHandlers?.forEach(handle => event.isFinal && handle(event.isFinal));\r\n        }\r\n        Voice.onSpeechEnd = (event: SpeechEndEvent) => {\r\n            this.speechEndHandlers?.forEach(handle => handle(event?.error));\r\n        }\r\n        Voice.onSpeechVolumeChanged = (event: SpeechVolumeChangeEvent) => {\r\n            this.speechVolumeHandlers?.forEach(handle => event.value && handle(event.value));\r\n        }\r\n    }\r\n\r\n    startListening() {\r\n        Voice.start(this.locale)\r\n    }\r\n\r\n    stopListening() {\r\n        Voice.stop()\r\n    }\r\n\r\n    cancelListening() {\r\n        Voice.cancel()\r\n    }\r\n\r\n    destroyInstance() {\r\n        Voice.destroy()\r\n    }\r\n\r\n    removeAllListeners() {\r\n        Voice.removeAllListeners()\r\n    }\r\n\r\n    async isVoiceAvailable(): Promise<boolean> {\r\n        const isVoiceAvailable = await Voice.isAvailable();\r\n        if (isVoiceAvailable == 0) {\r\n            return (false)\r\n        }\r\n        else {\r\n            return (true)\r\n        }\r\n    }\r\n\r\n    async isRecognizing(): Promise<boolean> {\r\n        const isRecognizing = await Voice.isRecognizing();\r\n        if (isRecognizing == 0) {\r\n            return (false)\r\n        }\r\n        else {\r\n            return (true)\r\n        }\r\n    }\r\n\r\n    async getSpeechRecognitionServices(): Promise<string[]> {\r\n        const services = await Voice.getSpeechRecognitionServices();\r\n        if (services) {\r\n            return (services)\r\n        }\r\n        else {\r\n            return ([''])\r\n        }\r\n    }\r\n\r\n    addFinishListener(callback: (fullResult: string) => void) {\r\n        this.speechResultsHandlers?.push(callback);\r\n    }\r\n\r\n    addErrorListener(callback: (error: string) => void) {\r\n        this.speechErrorHandlers?.push(callback);\r\n    }\r\n\r\n    addPartialListener(callback: (partialResult: string) => void) {\r\n        this.speechPartialHandlers?.push(callback);\r\n    }\r\n\r\n    addStartListener(callback: (error?: boolean) => void) {\r\n        this.speechStartHandlers?.push(callback)\r\n    }\r\n\r\n    addRecognizedListener(callback: (isFinal: boolean) => void) {\r\n        this.speechRecognizedHandlers?.push(callback)\r\n    }\r\n\r\n    addEndListener(callback: (error?: boolean) => void) {\r\n        this.speechEndHandlers?.push(callback)\r\n    }\r\n\r\n    addVolumeListener(callback: (value: number) => void) {\r\n        this.speechVolumeHandlers?.push(callback)\r\n    }\r\n\r\n    clearHandlers() {\r\n        this.speechResultsHandlers = []\r\n        this.speechErrorHandlers = []\r\n        this.speechPartialHandlers = []\r\n        this.speechStartHandlers = []\r\n        this.speechEndHandlers = []\r\n        this.speechRecognizedHandlers = []\r\n        this.speechVolumeHandlers = []\r\n    }\r\n}"],"mappings":"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"}