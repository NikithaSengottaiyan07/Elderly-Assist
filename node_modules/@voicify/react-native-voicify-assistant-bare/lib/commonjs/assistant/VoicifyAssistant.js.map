{"version":3,"names":["VoicifyAssistant","constructor","settings","ttsProvider","sttProvider","_defineProperty","speechToTextProvider","textToSpeechProvider","initializeAndStart","_this$textToSpeechPro","_this$speechToTextPro","initialize","locale","startNewSession","sessionId","userId","sessionAttributes","userAttributes","_this$settings","uuidv4","currentSessionInfo","currentUserInfo","initializeWithWelcomeMessage","makeWelcomeRequest","onEffect","effectName","callback","_this$effectHandlers","effectHandlers","push","effect","onError","_this$errorHandlers","errorHandlers","onRequestStarted","_this$requestStartedH","requestStartedHandlers","onResponseReceived","_this$responseHandler","responseHandlers","onSessionEnded","_this$endSessionHandl","endSessionHandlers","onPlayVideo","_this$videoHandlers","videoHandlers","onPlayAudio","_this$audioHandlers","audioHandlers","clearHandlers","makeTextRequest","text","requestAttributes","inputType","request","generateTextRequest","makeRequest","generateWelcomeRequest","addSessionAttribute","key","value","addUserAttribute","addAccessToken","accessToken","_this$textToSpeechPro2","_this$requestStartedH2","stop","forEach","handle","result","fetch","serverRootUrl","appId","appKey","method","headers","body","JSON","stringify","status","_this$textToSpeechPro3","_this$textToSpeechPro4","_this$settings2","_this$responseHandler2","_this$audioHandlers2","_this$videoHandlers2","response","json","addFinishListener","_this$speechToTextPro2","autoRunConversation","useVoiceInput","useOutputSpeech","endSession","startListening","outputSpeech","ssml","speakSsml","then","sessionRes","_response$effects","_effects","sessionData","effects","length","_sessionData$sessionA","_effects$","_effects$2","name","_effectHandlers$filte","filter","e","data","_effects2","requestId","_effectHandlers$filte2","userRes","userData","audioFile","videoFile","_this$endSessionHandl2","_this$speechToTextPro3","_this$errorHandlers2","error","_this$errorHandlers3","toString","user","generateUser","device","generateDevice","context","channel","requestType","originalInput","requiresLanguageUnderstanding","additionalSessionAttributes","additionalRequestAttributes","requestName","id","additionalUserAttributes","supportsDisplayText","supportsTextInput","supportsSsml","supportsVoiceInput","exports","replace","c","r","Math","random","v"],"sources":["VoicifyAssistant.ts"],"sourcesContent":["import type { CustomAssistantRequest, CustomAssistantResponse, CustomAssistantUser, MediaItemModel, VoicifySessionData, VoicifySessionEffect, VoicifyUserData } from \"../models/customAssistantApiModels\";\r\nimport type { InputType } from \"./AssistantUITypes\";\r\nimport type VoicifySpeechToTextProvider from \"./VoicifySpeechToTextProvider\";\r\nimport type VoicifyTextToSpeechProvider from \"./VoicifyTextToSpeechProvider\";\r\n//TO DO: use the assistant SDK from NPM once it is ready instead of having seperate files\r\nexport class VoicifyAssistant {\r\n    textToSpeechProvider?: VoicifyTextToSpeechProvider\r\n    speechToTextProvider?: VoicifySpeechToTextProvider\r\n    settings: VoicifyAssistantSettings\r\n    sessionId?: string\r\n    userId?: string\r\n    accessToken?: string\r\n    sessionAttributes?: { [key: string]: any; }\r\n    userAttributes?: { [key: string]: any; }\r\n    errorHandlers: ((e: string) => void)[] = []\r\n    effectHandlers: { effect: string, callback: ((data: any) => void) }[] = []\r\n    requestStartedHandlers: ((req: CustomAssistantRequest) => void)[] = []\r\n    responseHandlers: ((res: CustomAssistantResponse) => void)[] = []\r\n    endSessionHandlers: ((res: CustomAssistantResponse) => void)[] = []\r\n    audioHandlers: ((media: MediaItemModel) => void)[] = []\r\n    videoHandlers: ((media: MediaItemModel) => void)[] = []\r\n    currentSessionInfo?: VoicifySessionData\r\n    currentUserInfo?: VoicifyUserData\r\n\r\n    constructor(settings: VoicifyAssistantSettings, ttsProvider?: VoicifyTextToSpeechProvider, sttProvider?: VoicifySpeechToTextProvider) {\r\n        this.speechToTextProvider = sttProvider;\r\n        this.textToSpeechProvider = ttsProvider;\r\n        this.settings = settings;\r\n    }\r\n\r\n    initializeAndStart() {\r\n        this.textToSpeechProvider?.initialize(this.settings.locale);\r\n        this.speechToTextProvider?.initialize(this.settings.locale);\r\n    }\r\n\r\n    startNewSession(sessionId?: string, userId?: string, sessionAttributes?: { [key: string]: any; }, userAttributes?: { [key: string]: any; }) {\r\n        this.sessionId = sessionId ?? uuidv4();\r\n        this.userId = userId ?? this.userId ?? uuidv4();\r\n        this.sessionAttributes = sessionAttributes;\r\n        this.userAttributes = userAttributes;\r\n        this.currentSessionInfo = {};\r\n        this.currentUserInfo = {};\r\n        if (this.settings?.initializeWithWelcomeMessage)\r\n            this.makeWelcomeRequest();\r\n    }\r\n\r\n    onEffect(effectName: string, callback: (data: any) => void) {\r\n        this.effectHandlers?.push({ effect: effectName, callback });\r\n    }\r\n\r\n    onError(callback: (error: string) => void) {\r\n        this.errorHandlers?.push(callback);\r\n    }\r\n\r\n    onRequestStarted(callback: (request: CustomAssistantRequest) => void) {\r\n        this.requestStartedHandlers?.push(callback);\r\n    }\r\n\r\n    onResponseReceived(callback: (response: CustomAssistantResponse) => void) {\r\n        this.responseHandlers?.push(callback);\r\n    }\r\n\r\n    onSessionEnded(callback: (response: CustomAssistantResponse) => void) {\r\n        this.endSessionHandlers?.push(callback);\r\n    }\r\n\r\n    onPlayVideo(callback: (mediaItem: MediaItemModel) => void) {\r\n        this.videoHandlers?.push(callback);\r\n    }\r\n\r\n    onPlayAudio(callback: (mediaItem: MediaItemModel) => void) {\r\n        this.audioHandlers?.push(callback);\r\n    }\r\n\r\n    clearHandlers() {\r\n        this.audioHandlers = []\r\n        this.videoHandlers = []\r\n        this.responseHandlers = []\r\n        this.requestStartedHandlers = []\r\n        this.errorHandlers = []\r\n        this.effectHandlers = []\r\n        this.endSessionHandlers = []\r\n    }\r\n\r\n    makeTextRequest(text: string, requestAttributes?: { [key: string]: any; }, inputType?: InputType) {\r\n        const request = this.generateTextRequest(text, requestAttributes);\r\n        return this.makeRequest(request, inputType);\r\n    }\r\n    makeWelcomeRequest(requestAttributes?: { [key: string]: any; }) {\r\n        const request = this.generateWelcomeRequest(requestAttributes);\r\n        return this.makeRequest(request);\r\n    }\r\n    addSessionAttribute(key: string, value: any) {\r\n        if (!this.sessionAttributes) this.sessionAttributes = {};\r\n        this.sessionAttributes[key] = value;\r\n    }\r\n    addUserAttribute(key: string, value: any) {\r\n        if (!this.userAttributes) this.userAttributes = {};\r\n        this.userAttributes[key] = value;\r\n    }\r\n    addAccessToken(value: string) {\r\n        this.accessToken = value;\r\n    }\r\n    async makeRequest(request: CustomAssistantRequest, inputType?: InputType) {\r\n        try {\r\n            this.textToSpeechProvider?.stop();\r\n            this.requestStartedHandlers?.forEach(handle => handle(request));\r\n            const result = await fetch(`${this.settings.serverRootUrl}/api/customAssistant/handlerequest?applicationId=${this.settings.appId}&applicationSecret=${this.settings.appKey}`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(request)\r\n            });\r\n            if (result.status == 200) {\r\n                const response = await result.json() as CustomAssistantResponse;\r\n                this.textToSpeechProvider?.clearHandlers()\r\n                this.textToSpeechProvider?.addFinishListener(() => {\r\n                    if (inputType) {\r\n                        (this.settings.autoRunConversation && this.settings.useVoiceInput && inputType == 'Speech' && this.settings.useOutputSpeech && this.speechToTextProvider && response.endSession == false) && this.speechToTextProvider?.startListening()\r\n                    }\r\n                })\r\n                if (this.textToSpeechProvider && this.settings?.useOutputSpeech && (response.outputSpeech || response.ssml)) {\r\n                    if (response.ssml) {\r\n                        this.textToSpeechProvider.speakSsml(response.ssml)\r\n                    }\r\n                    else if (response.outputSpeech) {\r\n                        this.textToSpeechProvider.speakSsml(`<speak>${response.outputSpeech}</speak>`)\r\n                    }\r\n                }\r\n\r\n\r\n                const effectHandlers = this.effectHandlers;\r\n                fetch(`${this.settings.serverRootUrl}/api/UserProfile/session/${this.sessionId}?applicationId=${this.settings.appId}&applicationSecret=${this.settings.appKey}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                }).then(async sessionRes => {\r\n                    if (sessionRes.status == 200) {\r\n                        const sessionData = await sessionRes?.json() as VoicifySessionData;\r\n                        if (sessionData) this.currentSessionInfo = sessionData;\r\n\r\n                        // fire effects\r\n                        // first check for response effects\r\n                        let effects: Array<VoicifySessionEffect> = []\r\n                        if(response?.effects?.length) {\r\n                            effects = response.effects\r\n                        }\r\n                        // if no response effects, check for session effects\r\n                        else {\r\n                            effects = (sessionData?.sessionAttributes?.[\"effects\"] ?? [])\r\n                        }\r\n                        \r\n                        // fire effects if we have any\r\n                        if(effects?.length)\r\n                        {\r\n                            // if we have the effect \"name\" prop, fire the response effects\r\n                            if(effects[0]?.name)\r\n                            {\r\n                                effects.forEach(effect =>{\r\n                                    effectHandlers.filter(e => e.effect == effect.name)?.forEach(handle => handle.callback(effect?.data)); \r\n                                })\r\n                            }\r\n                            // otherwise fire the session effects\r\n                            else if (effects[0]?.effectName)\r\n                            {\r\n                                effects?.filter(e => e.requestId == request.requestId)?.forEach(effect => {\r\n                                    effectHandlers.filter(e => e.effect == effect.effectName)?.forEach(handle => handle.callback(effect?.data));\r\n                                })  \r\n                            }\r\n                        }                      \r\n                    }\r\n                });\r\n                fetch(`${this.settings.serverRootUrl}/api/UserProfile/${this.userId}?applicationId=${this.settings.appId}&applicationSecret=${this.settings.appKey}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                }).then(async userRes => {\r\n                    if (userRes.status == 200) {\r\n                        const userData = await userRes?.json() as VoicifyUserData;\r\n                        if (userData) this.currentUserInfo = userData;\r\n                    }\r\n                });\r\n\r\n                this.responseHandlers?.forEach(handle => handle(response));\r\n                if (response?.audioFile)\r\n                    this.audioHandlers?.forEach(handle => handle(response.audioFile!!));\r\n                if (response?.videoFile)\r\n                    this.videoHandlers?.forEach(handle => handle(response.videoFile!!));\r\n                if (response.endSession) {\r\n                    this.endSessionHandlers?.forEach(handle => handle(response));\r\n                }\r\n                if(inputType)\r\n                {\r\n                    if (this.settings.autoRunConversation && this.settings.useVoiceInput && !response.endSession && inputType == \"Speech\" && (!this.textToSpeechProvider || !this.settings.useOutputSpeech)) {\r\n                        this.speechToTextProvider?.startListening()\r\n                    }\r\n                }\r\n                \r\n                return response;\r\n\r\n            } else {\r\n                const error = await result.text()\r\n                this.errorHandlers?.forEach(handle => handle(error));\r\n            }\r\n\r\n            return null;\r\n\r\n        } catch (e: any) {\r\n            this.errorHandlers?.forEach(handle => handle(e.toString()));\r\n            return null;\r\n        }\r\n    }\r\n    generateTextRequest(text: string, requestAttributes?: { [key: string]: any; }): CustomAssistantRequest {\r\n        return {\r\n            requestId: uuidv4(),\r\n            user: this.generateUser(),\r\n            device: this.generateDevice(),\r\n            context: {\r\n                channel: this.settings.channel,\r\n                locale: this.settings.locale,\r\n                sessionId: this.sessionId as string,\r\n                requestType: \"IntentRequest\",\r\n                originalInput: text,\r\n                requiresLanguageUnderstanding: true,\r\n                additionalSessionAttributes: this.sessionAttributes,\r\n                additionalRequestAttributes: requestAttributes\r\n            }\r\n        };\r\n    }\r\n    generateWelcomeRequest(requestAttributes?: { [key: string]: any; }): CustomAssistantRequest {\r\n        return {\r\n            requestId: uuidv4(),\r\n            user: this.generateUser(),\r\n            device: this.generateDevice(),\r\n            context: {\r\n                channel: this.settings.channel,\r\n                locale: this.settings.locale,\r\n                sessionId: this.sessionId as string,\r\n                requestType: \"IntentRequest\",\r\n                requestName: \"VoicifyWelcome\",\r\n                originalInput: \"[Automated]\",\r\n                requiresLanguageUnderstanding: false,\r\n                additionalSessionAttributes: this.sessionAttributes,\r\n                additionalRequestAttributes: requestAttributes\r\n            }\r\n        } as CustomAssistantRequest;\r\n    }\r\n\r\n\r\n    generateUser(): CustomAssistantUser {\r\n        return {\r\n            id: this.userId as string,\r\n            name: this.userId,\r\n            additionalUserAttributes: this.userAttributes,\r\n            accessToken: this?.accessToken\r\n        };\r\n    }\r\n\r\n    generateDevice() {\r\n        return {\r\n            id: this.settings.device,\r\n            name: this.settings.device,\r\n            supportsDisplayText: true,\r\n            supportsTextInput: true,\r\n            supportsSsml: this.settings.useOutputSpeech,\r\n            supportsVoiceInput: this.settings.useVoiceInput\r\n        };\r\n    }\r\n\r\n\r\n}\r\n// used to generate unique ids\r\nconst uuidv4 = () => {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n    });\r\n}\r\nexport interface VoicifyAssistantSettings {\r\n    serverRootUrl: string\r\n\r\n    appId: string\r\n\r\n    appKey: string\r\n\r\n    locale: string\r\n\r\n    channel: string\r\n\r\n    device: string\r\n\r\n    // if we get an endSession false, open the mic again right away\r\n    autoRunConversation: boolean\r\n\r\n    // send the welcome message right on session start\r\n    initializeWithWelcomeMessage: boolean\r\n\r\n    // trigger speech on conversation turns\r\n    useVoiceInput: boolean\r\n\r\n    // run tts on each conversation turn\r\n    useOutputSpeech: boolean\r\n\r\n}\r\n"],"mappings":"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"}