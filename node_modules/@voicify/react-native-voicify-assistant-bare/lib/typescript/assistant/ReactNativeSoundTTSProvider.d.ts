import type { TTSData, TTSRequest } from "../models/customAssistantApiModels";
import type VoicifyTextToSpeechProvider from './VoicifyTextToSpeechProvider';
import Sound from 'react-native-sound';
type LinkedUrls = {
    src?: string;
    next?: LinkedUrls;
};
export declare class ReactNativeSoundTTSProvider implements VoicifyTextToSpeechProvider {
    settings: VoicifyTextToSpeechSettings;
    audioPlayer?: Sound;
    speechEndHandlers: (() => void)[];
    cancel?: boolean;
    constructor(settings: VoicifyTextToSpeechSettings);
    initialize(locale: string): void;
    createLinkedList(src: TTSData[]): LinkedUrls;
    playNext(linkedSrc: LinkedUrls): void;
    speakSsml(ssml: string): Promise<void>;
    stop(): Promise<void>;
    ssmlToSpeech(ssml: string): Promise<TTSData[] | null>;
    generateTTSRequest(ssml: string): TTSRequest;
    addFinishListener(callback: () => void): void;
    clearHandlers(): void;
}
export interface VoicifyTextToSpeechSettings {
    appId: string;
    appKey: string;
    locale: string;
    voice: string;
    serverRootUrl: string;
    provider: 'Google' | 'Polly';
}
export {};
