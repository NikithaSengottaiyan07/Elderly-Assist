import type VoicifySpeechToTextProvider from './VoicifySpeechToTextProvider';
export declare class ReactNativeVoiceSTTProvider implements VoicifySpeechToTextProvider {
    locale: string;
    speechResultsHandlers: ((fullResult: string) => void)[];
    speechErrorHandlers: ((error: string) => void)[];
    speechPartialHandlers: ((partialResult: string) => void)[];
    speechStartHandlers: ((error?: boolean) => void)[];
    speechRecognizedHandlers: ((isFinal: boolean) => void)[];
    speechEndHandlers: ((error?: boolean) => void)[];
    speechVolumeHandlers: ((value: number) => void)[];
    constructor(locale: string);
    initialize(locale: string): void;
    startListening(): void;
    stopListening(): void;
    cancelListening(): void;
    destroyInstance(): void;
    removeAllListeners(): void;
    isVoiceAvailable(): Promise<boolean>;
    isRecognizing(): Promise<boolean>;
    getSpeechRecognitionServices(): Promise<string[]>;
    addFinishListener(callback: (fullResult: string) => void): void;
    addErrorListener(callback: (error: string) => void): void;
    addPartialListener(callback: (partialResult: string) => void): void;
    addStartListener(callback: (error?: boolean) => void): void;
    addRecognizedListener(callback: (isFinal: boolean) => void): void;
    addEndListener(callback: (error?: boolean) => void): void;
    addVolumeListener(callback: (value: number) => void): void;
    clearHandlers(): void;
}
